モデルとテーブルは一対一の関係にあります。
例えば'Customer'というモデルは'customer'というテーブルを扱い、'CustomerOrder'というモデルは'customer_order'というテーブルを扱います。

モデル名は必ず先頭が大文字になります。
また、'_'がテーブル名に含まれる場合は'_'を省き、その次の文字を大文字とします。
'hoge_huga_foo_bar'というテーブルは'HogeHugaFooBar'というモデルになります。

* Sabel_DBではテーブル名やカラム名に半角英数字と'_'以外の文字は使用できません。

モデルはapp/models以下に作成します。
例えばtestというテーブルに対応したモデルは以下のように作成します。

app/models/Test.php

  class Test extends Sabel_DB_Model
  {

  }

Testモデルを作成した後、以下のようなコードを記述するとtestテーブルの全レコードが取得できます。

  $test = new Test();
  $records = $test->select();

  foreach ($records as $record) {
    // ...
  }

ごく小さな、または単純なアプリケーションではロジックを持たないモデルがあるかもしれません。
大きなアプリケーションでも、セレクトボックスを表示するためのデータを保持するテーブルなどは、モデルが必要ないかもしれません。

それら全ての空のモデルを作成するのは面倒です。
それを解決するために、MODEL()関数とProxyモデルがあります。

Proxyモデルはsabelコマンドで雛型を作成した時にapp/modelsの下に置かれます。
これは名前の通り、モデルが存在しない場合にその「代役」をこなします。

先ほど作成したTestモデル(app/models/Test.php)を削除し、コードを以下のように書き換えます。

  $records = MODEL("Test")->select();

これは全く同じように動作します。

モデルが存在すればそれを使用するので、MODEL()関数を使用して、ロジックが必要になったらモデルを作成するということができます。
