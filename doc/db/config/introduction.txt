Sabel_DBではコネクションネームというものを用いてDBサーバに接続します。
そしてそれはconfig/connection.phpというファイルで管理されます。
これは素晴らしいことでも、優れたものでもありません。DSNという文字列を渡しDBサーバとの接続するものと同じようなことです。
接続パラメータは、DSNではなく、configファイルに配列で記述します。

ある程度の規模になると複数のデータベースを使うことはよくあることです。
何らかの理由により、使用するデータベース製品も異なるかもしれません。

例えばデータベース1に「database1」、データベース2に「database2」というコネクションネームを付けたならば、
あとは必要な時に必要な場所でこれらのコネクションネームをセットするだけです。
本来ならばこのdatabase1・database2という名前はよくないものです。データベースの役割に適した名前を付けることを推奨します。

Configが担う重要な機能は環境を抽象化することです。

Configによって、簡単に環境ごとのDBサーバに接続することが可能になります。
ローカル(自分のマシン)でWebサーバやDBサーバを動かし、開発するエンジニアやプログラマもいると思います。
また、開発時用のサーバをチームで共有して開発するかもしれません。
このような開発(DEVELOPMENT)と運用(PRODUCTION)でDBサーバが異なる場合でも、簡単に切り替えられます。

気をつけなければいけないことは、コネクションネームは全ての環境において同じであることです。
変更すべきは、コネクションネームに結び付けられた接続パラメータです。
そしてもう一つ注意すべきなのは、DB製品固有の機能を使用する場合です。この場合は開発環境でも運用でも同じDB製品を使用する必要があります。
それさえなければ、開発(ローカル)ではSqliteを使うこともできます(言いすぎかもしれませんが...外部キーもないことですし)。

subversionなどで管理する場合は、config/connection.phpは除外するようにしてください。
