[Migration]

・マイグレーションファイルのフォーマット(テーブル作成・カラム追加)
  カラム名:
    指示子: 指定
    ...

・カラムの型指定
  type: 型名

  型名には以下の型が指定できます。
    INT, BIGINT, FLOAT, DOUBLE, STRING, TEXT,
    BOOL, DATETIME, BYTE, DATE, TIME

  ・STRING型にはSTRING(最大文字数)のように、文字数を指定します。
    文字数を指定しない場合は最大文字数は255文字に設定されます。

・カラム制約
  increment, primary, nullable

  これらの指示には、TRUEかFALSEを指定します。
  または指示子自体を省略することもできます。指示子省略はFALSEと同じ挙動です。

  ・incrementをTRUEにするとINSERT順に連番が付けられます。指示子を省略するとFALSEに設定されます。
  ※sqliteではBIGINT型のincrementをサポートしていません。

  ・primaryをTRUEにするとそのカラムがプライマリキーになります。指示子を省略するとFALSEに設定されます。
  ※プライマリキーを複数個のカラムから構成する場合は、それぞれのカラムのprimaryをTRUEに設定します。

  ・nullableをFALSEにするとカラムにNULL値を許可しません。(バリデーション時にエラーを返します)。指示子を省略するとTRUEに設定されます。

・デフォルト値
  default: "test"
  とすると、デフォルトの値がtestに設定されます。

  Boolean型のカラムの場合は次のようにbool値を設定します。
  default: FALSE

  デフォルト値にエスケープを必要とする文字列(クオートなど)を含めることは出来ません。
  今後含めることが出来るように対応する予定もありません。

・ファイル名規則
  バージョン番号_モデル名_指示
  指示には
    create
    drop
    addColumn
    dropColumn
    changeColumn
    custom
  が指定できます。

　例: 1_Users_create (拡張子は必要ありません。)

・注意!! 大文字・小文字の区別
  カラム型, TRUE, FALSE, NULLは必ず大文字で記入します。
  これは複数人で開発するときなどに、統一性を与えるためです。

・コマンド(実行)
アプリケーションのルートディレクトリで以下のコマンドを実行します。

  sakle Migration [環境] [バージョン番号] [コネクションネーム]

例えば開発をスタートし、3つのマイグレーションファイルを作ったとします。
データベースは1つで、defaultという名前でDB設定を記述してあります(config/connection.php)。
その場合は以下のようなコマンドを実行するでしょう。

  sakle Migration development 3 default

そうすると、1、2、3と順番に適用されます。
また、コネクションネームがdefaultの場合は省略することができます。

3まで適用した後に次のコマンドを実行すると3、2で適用した分を取消し、1だけを適用した状態に戻ります。

  sakle Migration development 1

複数人での開発になると、最も新しいマイグレーション番号を調べてから、最新まで適用というのは面倒です。
その場合はheadというキーワードを使うことができます。

  sakle Migration development head

これで最新まで適用されます。
キーワードには以下の4つがあります。

  head:   最新まで適用
  foot:   初期の状態に戻す(0と同等)
  reset:  一度初期(0)の状態にしてから現在のバージョンまで適用
  rehead: 一度初期(0)の状態にしてから最近まで適用

・マイグレーションにおける注意点
マイグレーションディレクトリ内にrestoresというディレクトリが出来ていることに気づくかもしれません。これはdropやdropColumnが実行された時、ダウングレード時にそのテーブルやカラムを復元するためのファイルが置かれています。これを削除してしまうとダウングレードができなくなるので、絶対に削除しないようにしてください。

複数人での開発ではsubversionなどを使いバージョン管理を行うことがほとんどだと思います。その時、マイグレーションディレクトリ内のtemporaryディレクトリやrestoresディレクトリは共有しないようにしましょう。

***** マイグレーションファイル記述例 *****

1. usersテーブルを作成する (1_Users_create)

id:
  type: INT
  increment: TRUE
  primary: TRUE

name:
  type: STRING(64)
  default: "no name"

age:
  type: SMALLINT
  default: 0

email:
  type: STRING(128)
  nullable: FALSE

-------------------------------------------------------------

2. articlesテーブルを作成する (2_Articles_create)

id:
  type: INT
  increment: TRUE
  primary: TRUE

title:
  type: STRING(255)
  nullable: FALSE

body:
  type: TEXT
  nullable: FALSE

-------------------------------------------------------------

3. articlesテーブルにカラムを追加する (3_Articles_addColumn)

update_time:
  type: DATETIME

remove_flag:
  type: BOOL
  default: FALSE

-------------------------------------------------------------

4. usersテーブルのageカラムを削除する (4_Users_dropColumn)

age

dropColumnの時のフォーマットは、

  削除するカラム1
  削除するカラム2
  ...

のようにカラム名を列挙します。

-------------------------------------------------------------

5. usersテーブルのemailカラムの最大文字数を128から255に変更する (5_Users_changeColumn)

email:
  type: STRING(255)

この一連の例では、usersテーブル作成時にemailのnullableをFALSEにしています。
作成時やカラム追加時に指示子を省略するとnullableはTRUEに設定されますが、changeColumnでは省略した場合、元の状態が受け継がれますので、変更後もFALSEのままです。

-------------------------------------------------------------

6. articlesテーブルを削除する (6_Articles_drop)

dropの場合はファイルに何も記述する必要はありません。
規約に沿ったファイル名のファイルを置くだけです。

-------------------------------------------------------------
