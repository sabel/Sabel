テスト
==============================================================================

必要条件
------------------------------------------------------------------------------
PHPUnit3がインストールされていることが必須です。
PHPUnit3以外のパッケージには依存していません。



概要
------------------------------------------------------------------------------
Sabelで開発されているアプリケーションはSabelでテストできます。
テストの実行はsakleのタスクを用いて行います。

モデルの単体テストにはUnitTestタスクを使います。
コントローラを通した機能テストにはFunctionalタスクを使います。

全てのテストはTEST環境で実行されます。



モデル単体テストの記述と実行
------------------------------------------------------------------------------
まず簡単なテストクラスを作成します。

tests/units/Member.php

    <?php
    class Units_Member extends Sabel_Test_Model
    {
      public function testMember()
      {
        $member = new Member(1);
        $this->assertEquals($member->name, "first");
      }
    }
    ?>

実行してみましょう。
    % sakle UnitTest Member
    PHPUnit 3.0.6 by Sebastian Bergmann.
    
    F
    
    Time: 00:00
    
    There was 1 failure:
    
    1) testMember(Units_Member)
    Failed asserting that <string:first> is equal to <null>.
    /Users/morireo/Sites/progressive/tests/units/Member.php:8
    /Users/morireo/Repository/sabel/sabel/test/Model.php:45
    /Users/morireo/Repository/sabel/sabel/test/ModelRunner.php:23
    /Users/morireo/Sites/progressive/tasks/UnitTest.php:30
    /Users/morireo/Repository/sabel/sabel/Sakle.php:58
    /Users/morireo/Repository/sabel/sabel/Sakle.php:39
    /Users/morireo/Repository/sabel/sabel/Sakle.php:13
    
    FAILURES!
    Tests: 1, Failures: 1.

おっと、失敗してしまいました。なぜでしょうか？
そう、データベースに行がありません。

DEVELOPMENT環境でデータが既にデータベースにある場合は簡単にテストデータとして取り出すことができます。
次のコマンドを実行してください。

% sakle Fixture development import Member
[SUCCESS]: import

実行が成功するとtests/fixture/Member.phpにフィクスチャクラスが作成されます。
内容は次のようになります。

    <?php
    /**
     * Fixtures of member
     * this fixture class automaticaly generated from sakle Fixture task
     */
    class Fixtures_Member
    {
      public static function upFixture()
      {
        $model = new Member();
        $model->id = 1;
        $model->name = 'first';
        $model->email = 'first@example.com';
        $model->password = 'first';
        $model->attribute = 0;
        $model->at = '2007-06-21 17:00:00';
        if(!$model->save()) {
          dump($model->getErrors());
        }
      }
      
      public static function downFixture()
      {
        $model = new Member();
        $model->executeQuery("DELETE FROM member");
      }
    }
    ?>

さて、これで準備は整いました。もう一度テストを実行してみましょう。

    % sakle UnitTest Member
    PHPUnit 3.0.6 by Sebastian Bergmann.
    
    .
    
    Time: 00:00
    
    
    OK (1 test)
    
成功しましたね！

upFixture()とdownFixture()はテストケース毎に実行されます。
これはsetUp()とtearDown()の関係と同じです。



コントローラ機能テストの記述と実行
------------------------------------------------------------------------------

